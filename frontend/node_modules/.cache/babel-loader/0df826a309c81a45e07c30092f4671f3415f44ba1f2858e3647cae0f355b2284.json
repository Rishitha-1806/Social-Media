{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MERUGUMALA RISHITHA\\\\Downloads\\\\Social Media\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  onPostAdded\n}) => {\n  _s();\n  const [caption, setCaption] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert(\"Please upload an image or video\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"caption\", caption);\n    formData.append(\"file\", file);\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await fetch(\"http://localhost:5000/api/posts\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (res.ok) {\n        setCaption(\"\");\n        setFile(null);\n        onPostAdded(); // refresh posts\n      } else {\n        alert(\"Failed to add post\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"What's on your mind?\",\n      value: caption,\n      onChange: e => setCaption(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*,video/*\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"h0tHX78N8YJR70BX64nsfAYuEPE=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostForm","onPostAdded","_s","caption","setCaption","file","setFile","handleSubmit","e","preventDefault","alert","formData","FormData","append","token","localStorage","getItem","res","fetch","method","headers","Authorization","body","ok","err","console","error","className","children","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MERUGUMALA RISHITHA/Downloads/Social Media/frontend/src/components/PostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst PostForm = ({ onPostAdded }) => {\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!file) {\r\n      alert(\"Please upload an image or video\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"caption\", caption);\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await fetch(\"http://localhost:5000/api/posts\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (res.ok) {\r\n        setCaption(\"\");\r\n        setFile(null);\r\n        onPostAdded(); // refresh posts\r\n      } else {\r\n        alert(\"Failed to add post\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-form-card\">\r\n      <textarea\r\n        placeholder=\"What's on your mind?\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*,video/*\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n      />\r\n      <button onClick={handleSubmit}>Post</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACJ,IAAI,EAAE;MACTK,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEV,OAAO,CAAC;IACnCQ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUP,KAAK;QAChC,CAAC;QACDQ,IAAI,EAAEX;MACR,CAAC,CAAC;MAEF,IAAIM,GAAG,CAACM,EAAE,EAAE;QACVnB,UAAU,CAAC,EAAE,CAAC;QACdE,OAAO,CAAC,IAAI,CAAC;QACbL,WAAW,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM;QACLS,KAAK,CAAC,oBAAoB,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEzB,OAAA;IAAK4B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B7B,OAAA;MACE8B,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAE3B,OAAQ;MACf4B,QAAQ,EAAGvB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrC,OAAA;MACEsC,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,iBAAiB;MACxBP,QAAQ,EAAGvB,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACwB,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrC,OAAA;MAAQyC,OAAO,EAAEjC,YAAa;MAAAqB,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAClC,EAAA,CArDIF,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}