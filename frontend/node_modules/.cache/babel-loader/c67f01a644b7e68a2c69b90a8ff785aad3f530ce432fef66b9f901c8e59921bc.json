{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MERUGUMALA RISHITHA\\\\Downloads\\\\Social Media\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PostCard from \"./PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    let mounted = true;\n    const fetch = async () => {\n      setLoading(true);\n      try {\n        const res = await axios.get(\"http://localhost:5000/api/posts\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        if (mounted) setPosts(res.data);\n      } catch (err) {\n        console.error(err);\n        if (mounted) setError(\"Failed to load posts\");\n      } finally {\n        if (mounted) setLoading(false);\n      }\n    };\n    fetch();\n    return () => mounted = false;\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: \"Loading posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No posts yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : posts.map(p => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: p\n    }, p._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"WwDwm/yBHIjOh+TwDXyph2B2cus=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","axios","PostCard","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","loading","setLoading","error","setError","mounted","fetch","res","get","headers","Authorization","localStorage","getItem","data","err","console","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","p","post","_id","_c","$RefreshReg$"],"sources":["C:/Users/MERUGUMALA RISHITHA/Downloads/Social Media/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport PostCard from \"./PostCard\";\r\n\r\nconst PostList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetch = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/api/posts\", {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n        });\r\n        if (mounted) setPosts(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        if (mounted) setError(\"Failed to load posts\");\r\n      } finally {\r\n        if (mounted) setLoading(false);\r\n      }\r\n    };\r\n    fetch();\r\n    return () => (mounted = false);\r\n  }, []);\r\n\r\n  if (loading) return <p style={{ textAlign: \"center\" }}>Loading posts...</p>;\r\n  if (error) return <p className=\"error\" style={{ textAlign: \"center\" }}>{error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      {posts.length === 0 ? (\r\n        <p style={{ textAlign: \"center\" }}>No posts yet.</p>\r\n      ) : (\r\n        posts.map((p) => <PostCard key={p._id} post={p} />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAIc,OAAO,GAAG,IAAI;IAClB,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxBJ,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMK,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,EAAE;UAC7DC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAAG;QACtE,CAAC,CAAC;QACF,IAAIP,OAAO,EAAEL,QAAQ,CAACO,GAAG,CAACM,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACZ,KAAK,CAACW,GAAG,CAAC;QAClB,IAAIT,OAAO,EAAED,QAAQ,CAAC,sBAAsB,CAAC;MAC/C,CAAC,SAAS;QACR,IAAIC,OAAO,EAAEH,UAAU,CAAC,KAAK,CAAC;MAChC;IACF,CAAC;IACDI,KAAK,CAAC,CAAC;IACP,OAAO,MAAOD,OAAO,GAAG,KAAM;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAGoB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC3E,IAAInB,KAAK,EAAE,oBAAOP,OAAA;IAAG2B,SAAS,EAAC,OAAO;IAACP,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,EAAEf;EAAK;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAElF,oBACE1B,OAAA;IAAAsB,QAAA,EACGnB,KAAK,CAACyB,MAAM,KAAK,CAAC,gBACjB5B,OAAA;MAAGoB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEpDvB,KAAK,CAAC0B,GAAG,CAAEC,CAAC,iBAAK9B,OAAA,CAACF,QAAQ;MAAaiC,IAAI,EAAED;IAAE,GAAfA,CAAC,CAACE,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EACnD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CArCID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}