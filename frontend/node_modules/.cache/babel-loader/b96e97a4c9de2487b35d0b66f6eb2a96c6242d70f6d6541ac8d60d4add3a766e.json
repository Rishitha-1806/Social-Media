{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MERUGUMALA RISHITHA\\\\Downloads\\\\Social Media\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\") || null);\n  useEffect(() => {\n    if (user) localStorage.setItem(\"user\", JSON.stringify(user));else localStorage.removeItem(\"user\");\n    if (token) localStorage.setItem(\"token\", token);else localStorage.removeItem(\"token\");\n  }, [user, token]);\n  const login = (userData, jwtToken) => {\n    setUser(userData);\n    setToken(jwtToken);\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n  };\n\n  // ✅ Add registerUser function\n  const registerUser = async formData => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/auth/register\", formData);\n      login(res.data.user, res.data.token); // auto-login after register\n      return res.data;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout,\n      registerUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook\n_s(AuthProvider, \"NBMNWQteVYRRRHkkSej2bbjF3kc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","token","setToken","setItem","stringify","removeItem","login","userData","jwtToken","logout","registerUser","formData","res","post","data","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/MERUGUMALA RISHITHA/Downloads/Social Media/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\") || null);\r\n\r\n  useEffect(() => {\r\n    if (user) localStorage.setItem(\"user\", JSON.stringify(user));\r\n    else localStorage.removeItem(\"user\");\r\n\r\n    if (token) localStorage.setItem(\"token\", token);\r\n    else localStorage.removeItem(\"token\");\r\n  }, [user, token]);\r\n\r\n  const login = (userData, jwtToken) => {\r\n    setUser(userData);\r\n    setToken(jwtToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n  };\r\n\r\n  // ✅ Add registerUser function\r\n  const registerUser = async (formData) => {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/register\", formData);\r\n      login(res.data.user, res.data.token); // auto-login after register\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout, registerUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACrC,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACnD,CAAC,CAAC;EAEF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,MAAMa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EAE/Eb,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAEG,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACV,IAAI,CAAC,CAAC,CAAC,KACxDG,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAEpC,IAAIJ,KAAK,EAAEJ,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC,KAC3CJ,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;EACvC,CAAC,EAAE,CAACX,IAAI,EAAEO,KAAK,CAAC,CAAC;EAEjB,MAAMK,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpCb,OAAO,CAACY,QAAQ,CAAC;IACjBL,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBd,OAAO,CAAC,IAAI,CAAC;IACbO,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;;EAED;EACA,MAAMQ,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,yCAAyC,EAAEF,QAAQ,CAAC;MACjFL,KAAK,CAACM,GAAG,CAACE,IAAI,CAACpB,IAAI,EAAEkB,GAAG,CAACE,IAAI,CAACb,KAAK,CAAC,CAAC,CAAC;MACtC,OAAOW,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClB,MAAMA,GAAG;IACX;EACF,CAAC;EAED,oBACE1B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEO,KAAK;MAAEK,KAAK;MAAEG,MAAM;MAAEC;IAAa,CAAE;IAAAlB,QAAA,EACvEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA9B,EAAA,CA7CaF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA8CzB,OAAO,MAAMkC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAACI,WAAW,CAAC;AAAA;AAACoC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}