{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MERUGUMALA RISHITHA\\\\Downloads\\\\Social Media\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport PostForm from \"./PostForm\";\nimport PostList from \"./PostList\";\nimport Avatar from \"./Avatar\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\"); // redirect if not logged in\n    } else {\n      fetchPosts();\n    }\n  }, [user]);\n  const handleLogout = () => {\n    logout();\n    navigate(\"/login\");\n  };\n  const fetchPosts = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/posts\");\n      const data = await res.json();\n      setPosts(data);\n    } catch (err) {\n      console.error(\"Failed to fetch posts:\", err);\n    }\n  };\n  const handleNewPost = newPost => {\n    setPosts([newPost, ...posts]);\n  };\n  if (!user) return null; // avoid rendering before redirect\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dashboard-username\",\n        children: [\"Hello, \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-section\",\n      children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handleNewPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"zfANDCI6WwOoYc1Pw8qlbf1TWwM=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","useNavigate","PostForm","PostList","Avatar","jsxDEV","_jsxDEV","Dashboard","_s","user","logout","navigate","posts","setPosts","fetchPosts","handleLogout","res","fetch","data","json","err","console","error","handleNewPost","newPost","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onPostCreated","_c","$RefreshReg$"],"sources":["C:/Users/MERUGUMALA RISHITHA/Downloads/Social Media/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PostForm from \"./PostForm\";\r\nimport PostList from \"./PostList\";\r\nimport Avatar from \"./Avatar\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/login\"); // redirect if not logged in\r\n    } else {\r\n      fetchPosts();\r\n    }\r\n  }, [user]);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/posts\");\r\n      const data = await res.json();\r\n      setPosts(data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch posts:\", err);\r\n    }\r\n  };\r\n\r\n  const handleNewPost = (newPost) => {\r\n    setPosts([newPost, ...posts]);\r\n  };\r\n\r\n  if (!user) return null; // avoid rendering before redirect\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Topbar */}\r\n      <div className=\"dashboard-topbar\">\r\n        <span className=\"dashboard-username\">Hello, {user.username}</span>\r\n        <button className=\"logout-btn\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Avatar Section */}\r\n      <div className=\"avatar-section\">\r\n        <Avatar />\r\n      </div>\r\n\r\n      {/* Post Form */}\r\n      <PostForm onPostCreated={handleNewPost} />\r\n\r\n      {/* Post List */}\r\n      <PostList posts={posts} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGV,OAAO,CAAC,CAAC;EAClC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,IAAI,EAAE;MACTE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLG,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBL,MAAM,CAAC,CAAC;IACRC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BN,QAAQ,CAACK,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAMG,aAAa,GAAIC,OAAO,IAAK;IACjCX,QAAQ,CAAC,CAACW,OAAO,EAAE,GAAGZ,KAAK,CAAC,CAAC;EAC/B,CAAC;EAED,IAAI,CAACH,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC;;EAExB,oBACEH,OAAA;IAAKmB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAElCpB,OAAA;MAAKmB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BpB,OAAA;QAAMmB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAAC,SAAO,EAACjB,IAAI,CAACkB,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClEzB,OAAA;QAAQmB,SAAS,EAAC,YAAY;QAACO,OAAO,EAAEjB,YAAa;QAAAW,QAAA,EAAC;MAEtD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNzB,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BpB,OAAA,CAACF,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAGNzB,OAAA,CAACJ,QAAQ;MAAC+B,aAAa,EAAEV;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG1CzB,OAAA,CAACH,QAAQ;MAACS,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxDID,SAAS;EAAA,QACYP,OAAO,EACfC,WAAW;AAAA;AAAAiC,EAAA,GAFxB3B,SAAS;AA0Df,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}